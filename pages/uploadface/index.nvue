<template>
	<view class="page-container">
		<view class="title1">
			<text class="text">{{title1}}</text>
		</view>
		<view class="title2">
			<text class="text">{{title2}}</text>
		</view>
		<view class="live-camera-container">
			<view class="live-camera" :style="{ width: windowWidth, height: windowHeight }">
				<live-pusher id="livePusher" ref="livePusher" class="livePusher" mode="FHD" beauty="0" whiteness="0"
					:aspect="aspect" min-bitrate="1000" audio-quality="16KHz" device-position="front"
					orientation='vertical' :auto-focus="true" :muted="true" :enable-camera="true" :enable-mic="false"
					:zoom="false" @statechange="statechange" :style="{ width: windowWidth, height: windowHeight }">
				</live-pusher>
			</view>
		</view>
		<cover-image class="menu-mask" src="/static/border.png"></cover-image>
		<view class="bottom">
			<view class="outer-circle" @click="upload">
				<view class="inner-circle"></view>
			</view>
			<view >
				<text class="text">确认采集</text>
			</view>
		</view>
	</view>
</template>

<script>
	import {
		pathToBase64
	} from '../../node_modules/image-tools/index.js'
	let _this = null;
	export default {
		data() {
			return {
				poenCarmeInterval: null, //打开相机的轮询
				aspect: '2:3', //比例
				windowWidth: '', //屏幕可用宽度
				windowHeight: '', //屏幕可用高度
				camerastate: false, //相机准备好了
				livePusher: null, //流视频对象
				snapshotsrc: null, //快照,
				startTime: new Date(),
				check: false,
				socket: null,
				toId: null,
				open: false,
				message:'请正对摄像头',
				title1:'采集要求',
				title2:'正脸采集、光线充足、五官清晰'
			};
		},
		onLoad(e) {
			_this = this;
			this.initCamera();
		},
		onReady() {
			this.livePusher = uni.createLivePusherContext('livePusher', this);
			this.startPreview(); //开启预览并设置摄像头
			this.poenCarme();
		},
		methods: {
			//轮询打开
			poenCarme() {
				//#ifdef APP-PLUS
				if (plus.os.name == 'Android') {
					this.poenCarmeInterval = setInterval(function() {
						// console.log(_this.camerastate);
						if (!_this.camerastate) _this.startPreview();
					}, 2500);
				}
				//#endif
			},
			//初始化相机
			initCamera() {
				uni.getSystemInfo({
					success: function(res) {
						_this.windowWidth = res.windowWidth;
						_this.windowHeight = res.windowHeight;
						let zcs = _this.aliquot(_this.windowWidth, _this.windowHeight);
						_this.aspect = (_this.windowWidth / zcs) + ':' + (_this.windowHeight / zcs);
						console.log('画面比例：' + _this.aspect);
					}
				});
				this.message = `请正对摄像头`;
			},

			//整除数计算
			aliquot(x, y) {
				if (x % y == 0) return y;
				return this.aliquot(y, x % y);
			},

			//开始预览
			startPreview() {
				this.livePusher.startPreview({
					success: a => {
						console.log(a)
					}
				});
			},

			//停止预览
			stopPreview() {
				this.livePusher.stopPreview({
					success: a => {
						_this.camerastate = false; //标记相机未启动
					}
				});
			},

			//状态
			statechange(e) {
				//状态改变
				console.log(e);
				if (e.detail.code == 1007) {
					_this.camerastate = true;
				} else if (e.detail.code == -1301) {
					_this.camerastate = false;
				}
			},


			//返回
			back() {
				uni.navigateBack();
			},

			//抓拍
			snapshot() {
				// 人脸采样
				this.faceCheck()
			},

			//反转
			flip() {
				this.livePusher.switchCamera();
			},

			//设置
			setImage() {
				let pages = getCurrentPages();
				let prevPage = pages[pages.length - 2]; //上一个页面

				//直接调用上一个页面的setImage()方法，把数据存到上一个页面中去
				prevPage.$vm.setImage({
					path: _this.snapshotsrc
				});
			},
			close() {
				this.message = '请正对摄像头';
				if (this.open) {
					uni.closeSocket({});
				}
			},
			upload() {
				this.livePusher.snapshot({
					success: e => {
						console.log(e.message.tempImagePath);
						uni.getImageInfo({
							src: e.message.tempImagePath,
							success: (o) => {
								uni.compressImage({
									src: e.message.tempImagePath,
									width: `200px`,
									height: `${o.height/o.width*200}px`,
									success: (res) => {
										// 将人脸图片上传到服务器 接口请看接口文档
										uni.showToast({
										    title: '采集成功！',
										    //将值设置为 success 或者直接不用写icon这个参数
										    icon: 'success',
										    //显示持续时间为 2秒
										    duration: 2000
										})
										console.log(res.tempFilePath);
										pathToBase64(res.tempFilePath).then(base64 => {
											console.log(base64)
										});
									},
									error: (err) => {
										console.log(err);
									},
									complete: () => {
										console.log('complete')
									}
								})
							}
						})
					}
				});
			}
		}
	};
</script>

<style lang="scss">
	.page-container {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #fff;
	}
	.title1{
		margin-top:60rpx;
		.text{
			text-align: center;
			font-size: 40rpx
		}
	}
		
	.title2{
		margin-top: 10rpx;
		.text{
			text-align: center;
			font-size: 26rpx;
			color: #dddddd;
		}
	}

	.live-camera {
		// justify-content: center;
		// align-items: center;
		// top: -30rpx;

		&-container {
			position: absolute;
			top: 180rpx;
			left: 135rpx;
			height: 480rpx;
			width: 480rpx;
			overflow: hidden;
			justify-content: center;
			align-items: center;
		}
	}

	.menu-mask {
		position: absolute;
		top: 180rpx;
		left: 135rpx;
		height: 480rpx;
		width: 480rpx;
		z-index: 98;
	}
	.bottom{
		position: absolute;
		bottom: 20rpx;
		left: 0;
		width: 750rpx;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		.outer-circle{
			border: 10rpx solid #8277ff;
			height: 100rpx;
			width: 100rpx;
			border-radius: 50%;
			justify-content: center;
			align-items: center;
			.inner-circle{
				height: 70rpx;
				width: 70rpx;
				background-color: #8277ff;
				border-radius: 50%;
			}
		}
		.text{
			font-size: 28rpx;
		}
	}
</style>
